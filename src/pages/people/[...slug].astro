---
import { BaseCol } from "@components/base-col"
import { BaseRow } from "@components/base-row"
import { HCenterRow } from "@components/h-center-row"
import { MarkdownContent } from "@components/markdown-content"
import { PageTitle } from "@components/page-title"
import { AvatarImage } from "@components/people/avatar-image"
import { PostsPage } from "@components/posts/posts-page"
import { PEOPLE_SLUG } from "@consts"

import ContentLayout from "@layouts/ContentLayout.astro"
import { getAuthorBaseUrl } from "@lib/author"
import { paginate } from "@lib/paginate"
import {
  getAuthorPostMap,
  getSortedPosts,
  sortPostsByDateDesc,
} from "@lib/post"
import { getUrlFriendlyTag } from "@lib/urls"
import { type CollectionEntry, getCollection } from "astro:content"

export async function getStaticPaths() {
  let paths: any[] = []

  const people = await getCollection("people")
  const allPosts = await getSortedPosts()

  //const authorMap = getAuthorMap(people)

  const postMap = getAuthorPostMap(sortPostsByDateDesc(allPosts))

  people.forEach(person => {
    const slug = getUrlFriendlyTag(person.data.name)
    const posts = postMap[slug]

    paths = paths.concat(
      paginate(posts, slug, {
        person,
        root: getAuthorBaseUrl(person.data.name),
      }),
    )
  })

  return paths
}

interface Props {
  person: CollectionEntry<"people">
  data: CollectionEntry<"posts">[]
  page: number
  pages: number
}

const { person, data, page, pages } = Astro.props

const { Content } = await person.render()
---

<ContentLayout title={person.data.name}>
  <BaseCol className="gap-y-16" slot="main">
    <BaseRow className="gap-x-8">
      <div class="w-full">
        <HCenterRow className="mb-8 lg:hidden">
          <div>
            <AvatarImage
              person={person.data.name}
              className="h-64 w-64"
              client:visible
            />
          </div>
        </HCenterRow>
        <PageTitle title={person.data.name} subTitle={person.data.title} />
        <MarkdownContent className="mt-8"><Content /></MarkdownContent>
      </div>

      <AvatarImage
        person={person.data.name}
        className="hidden aspect-square h-64 w-64 shrink-0 lg:block"
        client:visible
      />
    </BaseRow>

    <section class="border-t border-border pt-16">
      <PostsPage
        posts={data}
        page={page}
        pages={pages}
        root={`${PEOPLE_SLUG}/${person.slug}`}
      />
    </section>
  </BaseCol>
</ContentLayout>
