---
import { FormattedDate } from "@components/formatted-date"
import { MarkdownContent } from "@components/markdown-content"

import PostLayout from "@layouts/PostLayout.astro"

import { CompactAvatars } from "@components/people/compact-avatars"

import { getCollection, type CollectionEntry } from "astro:content"
import { PostTags } from "@components/post/post-tags"
import { HeroImage } from "@components/post/hero-image"

// @ts-ignore
export async function getStaticPaths() {
  const posts = await getCollection("posts")

  return (
    posts
      // @ts-ignore
      .filter(post => (import.meta.env.PROD ? post.data.draft !== true : true))
      // @ts-ignore
      .map(post => {
        return {
          params: {
            slug: post.data.slug,
          },
          props: {
            post,
          },
        }
      })
  )
}

interface Props {
  post: CollectionEntry<"posts">
}

const { post } = Astro.props
const { Content } = await post.render()
---

<PostLayout title={post.data.title} tab="Blog">
  <Fragment slot="main">
    <PostTags post={post} />
    <HeroImage post={post} />

    <CompactAvatars people={post.data.authors} />
    <FormattedDate date={post.data.added} />
    <!-- <span class="h-px w-full bg-gray-300"/> -->
    <MarkdownContent className="border-t border-gray-300 pt-8">
      <Content /></MarkdownContent
    >
  </Fragment>
</PostLayout>
