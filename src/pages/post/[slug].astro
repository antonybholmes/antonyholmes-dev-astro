---
import { FormattedDate } from "@components/formatted-date"
import { MarkdownContent } from "@components/markdown-content"

import PostLayout from "@layouts/PostLayout.astro"

import { CompactAvatars } from "@components/person/compact-avatars"

import { getCollection, type CollectionEntry } from "astro:content"

// @ts-ignore
export async function getStaticPaths() {
  const posts = await getCollection("posts")

  return (
    posts
      // @ts-ignore
      .filter(post => (import.meta.env.PROD ? post.data.draft !== true : true))
      // @ts-ignore
      .map(post => {
        console.log(post.data.title, post.data.slug)
        return {
          params: {
            slug: post.data.slug,
          },
          props: {
            post,
          },
        }
      })
  )
}

interface Props {
  post: CollectionEntry<"posts">
}

const { post } = Astro.props
const { Content } = await post.render()
---

<PostLayout title={post.data.title} tab="Blog">
  <Fragment slot="main">
    <FormattedDate date={post.data.pubDate} />
    <CompactAvatars people={post.data.authors} />
    <MarkdownContent> <Content /></MarkdownContent>
  </Fragment>
</PostLayout>
