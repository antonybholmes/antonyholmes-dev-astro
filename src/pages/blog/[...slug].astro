---
import { type CollectionEntry } from "astro:content"

import {
  getPostSectionMap,
  getPostSection,
  getPostSlugSubPaths,
  getSortedPosts,
} from "@lib/post"
import { getSlug } from "@lib/urls"

import { paginate, type AstroPage } from "@lib/paginate"
import PostPageLayout from "@layouts/PostPageLayout.astro"
import PostsPageLayout from "@layouts/PostsPageLayout.astro"
import { BLOG_SLUG } from "@consts"

export async function getStaticPaths() {
  const allPosts = await getSortedPosts()

  let paths: AstroPage[] = []

  allPosts.forEach(post => {
    console.log(post.id, getPostSlugSubPaths(post))
    paths.push({
      params: {
        slug: getSlug(post.id),
      },
      props: {
        type: "post",
        section: getPostSection(post),
        page: 0,
        pages: 1,
        data: [post],
      },
    })
  })

  const sectionMap = getPostSectionMap(allPosts)

  ;[...sectionMap.entries()].forEach(([section, posts]) => {
    paths = paths.concat(
      paginate(posts, section, { section })
    )
  })

  return paths
}

interface Props {
  type: string
  section: string
  page: number
  pages: number
  data: CollectionEntry<"posts">[]
}

const { type, section, page, pages, data } = Astro.props
---

{type === "post" && <PostPageLayout post={data[0]} section={section}/>}
{type === "posts" && <PostsPageLayout page={page} pages={pages} data={data} section={section} />}
